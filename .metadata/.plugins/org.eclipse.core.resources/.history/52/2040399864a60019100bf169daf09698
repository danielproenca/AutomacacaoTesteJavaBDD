package br.ce.wcaquino.steps;

import static org.junit.Assert.assertEquals;

import br.ce.wcaquino.main.AlguelService;
import br.ce.wcaquino.main.Filme;
import br.ce.wcaquino.main.NotaAluguel;
import cucumber.api.java.pt.Dado;
import cucumber.api.java.pt.Então;
import cucumber.api.java.pt.Quando;

public class alugar_filme_steps {
	
	private Filme filme = new Filme();
	private AlguelService aluguel_serv = new AlguelService();
	private NotaAluguel nota_aluguel = new NotaAluguel();
	
	@Dado("^um filme com estoque de (\\d+) unidades$")
	public void umFilmeComEstoqueDeUnidades(int qtd_estoque) throws Throwable {
		filme.setEstoque(qtd_estoque);
	}

	@Dado("^que o preço de aluguel seja R\\$(\\d+)$")
	public void queOPreçoDeAluguelSejaR$(int preco) throws Throwable {
		filme.setAluguel(preco);
	}

	@Quando("^alugar$")
	public void alugar() throws Throwable {
		nota_aluguel = aluguel_serv.alugar(filme);
	}

	@Então("^o preço do aluguel será R\\$(\\d+)$")
	public void oPreçoDoAluguelSeráR$(int preco_correto) throws Throwable {
		assertEquals(preco_correto, nota_aluguel.getPreco());
	}

	@Então("^data de entrega será no dia seguinte$")
	public void dataDeEntregaSeráNoDiaSeguinte() throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	}

	@Então("^o estoque do filme será (\\d+) unidade$")
	public void oEstoqueDoFilmeSeráUnidade(int arg1) throws Throwable {
	    // Write code here that turns the phrase above into concrete actions
	}	
}
